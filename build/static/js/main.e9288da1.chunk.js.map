{"version":3,"sources":["components/SearchBar/Searchbar.js","components/Sort/Sort.js","components/EmployeeCard/EmployeeCard.js","components/Header/Header.js","components/Footer/Footer.js","components/Row/Row.js","components/Column/Column.js","components/Container/Container.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["Searchbar","props","className","value","search","onChange","handleInputChange","id","type","placeholder","Sort","onSubmit","handleSort","defaultValue","data-value","EmployeeCard","key","alt","src","firstName","lastName","username","email","phone","Header","Footer","Row","fluid","Col","size","split","map","join","Container","axios","get","App","state","initialEmployees","displayEmployees","sort","event","target","setState","prevState","length","searchEmployee","data","filter","employee","name","first","last","toLowerCase","includes","sortEmpAscending","sortedEmployees","concat","a","b","sortEmpDecending","handleSortChange","preventDefault","console","log","getAttribute","API","then","res","results","catch","err","this","sortA-Z","sortZ-A","login","cell","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e9288da1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./searchbar.css\";\r\n\r\n\r\nfunction Searchbar(props) {\r\n  return (\r\n    <>\r\n      <div className=\"input-group mb-3\">\r\n        <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange} \r\n          id=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\" \r\n          placeholder=\"Search for an Employee\" \r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Searchbar;","import React from \"react\";\r\nimport \"./sort.css\";\r\n\r\nfunction Sort(props) {\r\n  return (\r\n    <>\r\n      <form \r\n        id=\"sort\" \r\n        className=\"form-inline\"\r\n        onSubmit={props.handleSort}   \r\n      >\r\n        <select id=\"sortBy\" className=\"form-control\"  onChange={props.onChange}>\r\n          <option defaultValue>Sort...</option>\r\n          <option value=\"decending\" data-value=\"decending\">A-Z</option>\r\n          <option value=\"ascending\" data-value=\"ascending\">Z-A</option>\r\n        </select>\r\n        <button type=\"submit\" className=\"btn btn-outline-info\">Search</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sort;","import React from \"react\";\r\nimport \"./employeeStyle.css\";\r\n\r\nfunction EmployeeCard (props) {\r\n  return (\r\n    <div className=\"col-3\">\r\n      <div className=\"card\" key={props.id}>\r\n        <img \r\n          className=\"card-img-top\" \r\n          alt=\"Profile Placeholder\" \r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\" \r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{props.firstName} {props.lastName}</h5>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <strong>Username:</strong> {props.username}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Email Address:</strong> {props.email}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Cell:</strong> {props.phone}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeCard;","import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"container-fluid\">\r\n      <h1 className=\"title\">Employee Directory</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"container-fluid\">\r\n      <p className=\"boilerplate\">Made by Spencer Smith | 2020</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction Row(props) {\r\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\r\n}\r\n\r\nexport default Row;","import React from \"react\";\r\n\r\nfunction Col(props) {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return <div className={size} {...props} />;\r\n}\r\n\r\nexport default Col;","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\r\n}\r\n\r\nexport default Container;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  getEmployees: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=20&nat=us\")\r\n  }\r\n};","import React from \"react\";\nimport Searchbar from \"./components/SearchBar/Searchbar\";\nimport Sort from \"./components/Sort/Sort\";\nimport EmployeeCard from \"./components/EmployeeCard/EmployeeCard\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Row from \"./components/Row/Row\";\nimport Col from \"./components/Column/Column\"\nimport Container from \"./components/Container/Container\";\nimport API from \"./utils/API\";\n// import allEmployees from \"./employee.json\";\n\n\nclass App extends React.Component {\n  state = {\n    initialEmployees: [],\n    displayEmployees: [],\n    search: \"\",\n    sort: \"\"\n  };\n\n  componentDidMount() {\n    API.getEmployees()\n      .then(res =>\n        this.setState({\n          ...this.state,\n          initialEmployees: res.data.results,\n          displayEmployees: res.data.results\n        })\n      ).catch(err => console.log(err));\n      // console.log(this.state.employees);\n  }\n\n  handleInputChange = event => {\n    const search = event.target.value;\n\n    this.setState(prevState => ({\n      displayEmployees: search.length > 0 \n        ? this.searchEmployee(search, prevState.initialEmployees)\n        : prevState.initialEmployees\n    }));\n    // console.log(this.state.search);\n  };\n\n  searchEmployee = (search, data) => {\n    return data.filter(employee => {\n      const firstName = employee.name.first;\n      const lastName = employee.name.last;\n      const fullName = firstName.toLowerCase() + \" \" + lastName.toLowerCase();\n      // console.log(fullName);\n\n      return fullName.includes(search.toLowerCase());\n    });\n  };\n\n  sortEmpAscending = () => {\n    const sortedEmployees = [].concat(this.state.initialEmployees)\n      .sort((a, b) => a.name.first < b.name.first ? 1 : -1);\n\n      return this.setState({\n        ...this.state,\n        displayEmployees: sortedEmployees\n      });\n  }\n\n  sortEmpDecending = () => {\n    const sortedEmployees = [].concat(this.state.initialEmployees)\n      .sort((a, b) => a.name.first > b.name.first ? 1 : -1);\n\n      return this.setState({\n        ...this.state,\n        displayEmployees: sortedEmployees\n      });\n  }\n\n  handleSortChange = event => {\n    event.preventDefault();\n    const value = event.target.value;\n    this.setState({\n      ...this.state,\n      sort: value\n    })\n    console.log(this.state.sort);\n  }\n\n  handleSort = event => {\n    event.preventDefault();\n    const value = event.target.getAttribute(\"value\");\n    this.setState({\n      ...this.state,\n      sort: value\n    })\n    if (this.state.sort === \"decending\") {\n      this.sortEmpDecending();\n    } else if (this.state.sort === \"ascending\") {\n      this.sortEmpAscending();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Container>\n          <p>{this.state.search}</p>\n          <Row>\n            <Col size=\"8\">\n              <Searchbar\n                handleInputChange={this.handleInputChange}\n                searchEmployee={this.searchEmployee}\n              />\n            </Col>\n            <Col size=\"4\">\n              <Sort\n                value={this.state.sort}\n                handleSort={this.handleSort}\n                onChange={this.handleSortChange}\n                sortA-Z={this.sortEmpDecending}\n                sortZ-A={this.sortEmpAscending}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <Container>\n          <Row>\n            {this.state.displayEmployees.map(employee =>(\n                <EmployeeCard\n                  key={employee.email}\n                  firstName={employee.name.first}\n                  lastName={employee.name.last}\n                  username={employee.login.username}\n                  email={employee.email}\n                  phone={employee.cell}\n                />\n            ))}\n          </Row>\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}